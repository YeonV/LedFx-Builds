# This is a basic workflow that is manually triggered

name: build

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: 
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
       description: 'Person to greet'
        # Default value if no value is explicitly provided
       default: 'World'
        # Input has to be provided for the workflow to run
       required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
 

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          #- os: macos-latest
          #  TARGET: macos
          #  CMD_BUILD: >
          #      pyinstaller -F -w -n clipster -i resources/clipster.icns cli.py &&
          #      cd dist/ &&
          #      zip -r9 clipster clipster.app/
          #  OUT_FILE_NAME: clipster.zip
          #  ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            #CMD_BUILD: pyinstaller -F -w -n clipster -i resources/clipster.ico cli.py
            CMD_BUILD: pyinstaller win.spec  
            OUT_FILE_NAME: clipster.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v2
      with:
        repository: LedFx/LedFx
        ref: Virtuals
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
  # This workflow contains a single job called "greet"  

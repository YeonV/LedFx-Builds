name: build-mac

on: 
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      fversion:
        # Friendly description to be shown in the UI instead of 'name'
       description: 'Frontend Version'
        # Default value if no value is explicitly provided
       default: 'beta49'
        # Input has to be provided for the workflow to run
       required: false
jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                cd src && pyinstaller mac.spec &&
                cd dist/ && ls && mv LedFx_v2 LedFx.app &&
                zip -r LedFx-BladeMOD . -i LedFx.app
            OUT_FILE_NAME: LedFx-BladeMOD.zip
            ASSET_MIME: application/zip
          #- os: windows-latest
          #  TARGET: windows
          #  CMD_BUILD: cd src && pyinstaller win.spec
          #  OUT_FILE_NAME: LedFx
          #  # ASSET_MIME: application/vnd.microsoft.portable-executable
          #  ASSET_MIME: application/zip
    steps:
    #- name: Install 7Zip PowerShell Module
    #  shell: powershell
    #  run: Install-Module 7Zip4PowerShell -Force -Verbose
    #- uses: actions/checkout@v2
    #  with:
    #    repository: LedFx/LedFx
    #    ref: main
    #    path: src
    #- name: Delete old frontend
    #  run: |        
    #    Remove-Item -path src/ledfx_frontend -recurse -force
    #    cd src
    #    git rev-parse HEAD >> ledfx/git_version          
    #- name: Get latest frontend
    #  run: |
    #    curl -L --max-redirs 5 -o ledfx_frontend.zip "https://github.com/YeonV/LedFx-Frontend-v2/releases/latest/download/ledfx_frontend_v2.zip"        
    #- name: Include new frontend
    #  run: |
    #    7z.exe x ledfx_frontend.zip
    #    cp -r ledfx_frontend_v2 src/ledfx_frontend        
    #    cd src\ledfx_frontend
    #    dir
    #    cd ..
    #    cd ..
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  
    - uses: actions/checkout@v2
      with:
        repository: LedFx/LedFx
        ref: main
        path: src
    - uses: actions/checkout@v2
      with:
        repository: YeonV/LedFx-Builds
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: main
        path: src2
    - name: Get Backendver
      id: getbackendver
      run: |
        cd src/ledfx        
        echo "::set-output name=bversion::$(python consts.py)"
      
    - name: Install dependencies
      run: |
        brew install portaudio pulseaudio
        python -m pip install --upgrade pip
        python -m pip install --upgrade wheel
        cp src2/mac.spec src/mac.spec
        cd src 
        pip install -r requirements-dev.txt
        pip install -e .
        python setup.py develop        
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    #- name: Delete .lib from numpy
    #  run: |        
    #    Remove-Item -path ./src/dist/LedFx_v2/numpy/.libs -recurse -force -ErrorAction Ignore    
    
    #- name: Pack project # This would actually build your project, using zip for an example artifact
    #  run: |
    #    ls
    #    ls ./src/dist
    #    hdiutil create ./${{ matrix.OUT_FILE_NAME}}-v${{ steps.getbackendver.outputs.bversion }}-${{ github.event.inputs.fversion }}--mac.dmg ./src/dist/LedFx.app -ov
    - run:   |
       upload_url=$(curl -sL https://api.github.com/repos/actions/checkout/releases/latest | jq -r '.upload_url')
       echo UPLOAD_URL=$upload_url >> $GITHUB_ENV
      shell: bash
    - name: Upload Mac Build as Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./src/dist/LedFx-BladeMOD.zip
        asset_name: ${{ matrix.OUT_FILE_NAME}}-v${{ steps.getbackendver.outputs.bversion }}-${{ github.event.inputs.fversion }}--mac.zip
        asset_content_type: ${{ matrix.ASSET_MIME}}

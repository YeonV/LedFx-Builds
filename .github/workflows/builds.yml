name: builds

on: 
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
       description: 'Person to greet'
        # Default value if no value is explicitly provided
       default: 'v0.'
        # Input has to be provided for the workflow to run
       required: false

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.name }}
        release_name: Release ${{ github.event.inputs.name }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          #- os: macos-latest
          #  TARGET: macos
          #  CMD_BUILD: >
          #      cd src && pyinstaller -F -w -n LedFx-BladeMOD -i icons/discord.ico cli.py &&
          #      cd dist/ &&
          #      zip -r9 LedFx-BladeMOD LedFx-BladeMOD.app/
          #  OUT_FILE_NAME: LedFx-BladeMOD.zip
          #  ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: cd src && pyinstaller win.spec
            OUT_FILE_NAME: LedFx
            # ASSET_MIME: application/vnd.microsoft.portable-executable
            ASSET_MIME: application/zip
    steps:
    #- name: Install 7Zip PowerShell Module
    #  shell: powershell
    #  run: Install-Module 7Zip4PowerShell -Force -Verbose
    - uses: actions/checkout@v2
      with:
        repository: YeonV/LedFx-Backend
        ref: main
        token: ${{ secrets.FRONTEND_TOKEN }} 
        path: src
    - name: Delete old frontend
      run: |
        ls src
        Remove-Item -path src/ledfx_frontend -recurse -force
        cd src
    - name: Download Release Asset
      id: download_release_asset
      uses: i3h/download-release-asset@v1
      with:
        owner: YeonV
        repo: LedFx-Frontend
        tag: latest
        file: ledfx_frontend.zip
        token: ${{ secrets.FRONTEND_TOKEN }}
        
    - name: Check new frontend
      run: |
        7z.exe x ledfx_frontend.zip -osrc        
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  
    - name: Get Backendver
      id: getbackendver
      run: |
        cd src/ledfx        
        echo "::set-output name=bversion::$(python consts.py)"
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd src && pip install -r requirements.txt
        pip install pyinstaller
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Zip project # This would actually build your project, using zip for an example artifact
      run: 7z.exe a -tzip ${{ matrix.OUT_FILE_NAME}}-v${{ steps.getbackendver.outputs.bversion }}--BladeMOD-${{ github.event.inputs.name }}.zip ./src/dist/{{ matrix.OUT_FILE_NAME}}-BladeMOD -mx0 -xr!.git -xr!.github
      shell: cmd
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./${{ matrix.OUT_FILE_NAME}}-v${{ steps.getbackendver.outputs.bversion }}--BladeMOD-${{ github.event.inputs.name }}.zip
        asset_name: ${{ matrix.OUT_FILE_NAME}}-v${{ steps.getbackendver.outputs.bversion }}--BladeMOD-${{ github.event.inputs.name }}.zip
        asset_content_type: ${{ matrix.ASSET_MIME}}

name: LedFx BuildPipeline Android

on:
  workflow_dispatch:
     inputs:
      fversion:
        description: 'Frontend Version'
        default: '106'
        required: false
      upload_url:
        description: 'Upload URL for release'
        required: false
      release:
        description: 'Create Release'
        default: 'Yes'
        required: false
        type: choice
        options:
          - 'Yes'
          - 'No'
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Android Builder
        uses: actions/checkout@v4
        with:
          repository: broccoliboy/ledfx-android
      - name: Checkout LedFx
        uses: actions/checkout@v4
        with:
          repository: ledfx/LedFx
          path: deps/ledfx
      - name: Checkout frontend
        uses: actions/checkout@v4
        with:
          repository: YeonV/LedFx-Frontend-v2
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          path: src3
      - name: Check out tools from GitHub
        uses: actions/checkout@v4        
        with:
          repository: YeonV/LedFx-Builds
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          path: src2

      - name: Delete old frontend
        uses: JesseTG/rm@2fb8f3b8a0e41fc222e7943b63306c602feb187e
        with:
          path: ./deps/ledfx/ledfx_frontend

      # - name: apply patches
      #   run: |
      #     cp ./src2/tools/cors.patch ./deps/ledfx/cors.patch
      #     cp ./src2/tools/sentry.patch ./deps/ledfx/sentry.patch
      #     cp ./src2/tools/sentry_android.patch ./sentry_android.patch
      #     git apply sentry_android.patch
      #     cd ./deps/ledfx
      #     git apply cors.patch
      #     git apply sentry.patch
      #     cd ..
      #     cd ..

      - name: Bump version to ${{ github.event.inputs.fversion }}
        continue-on-error: true
        run: |
          sed -i '0,/PROJECT_VERSION = "\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\(-[a-z0-9]*\)*"/s//PROJECT_VERSION = "\1.\2.${{ github.event.inputs.fversion }}"/' ./deps/ledfx/ledfx/consts.py
          new_version=$(sed -n 's/.*PROJECT_VERSION = "\([0-9]*\.[0-9]*\.[0-9]*\(-[a-z0-9]*\)*\)".*/\1/p' ./deps/ledfx/ledfx/consts.py)
          echo "action_state=$new_version" >> $GITHUB_ENV

      # - name: Get latest frontend
      #   run: |
      #     curl -L --max-redirs 10 -o ledfx_frontend_android.zip "https://github.com/YeonV/LedFx-Frontend-v2/releases/latest/download/ledfx_frontend_android.zip"

      # - name: Include new frontend
      #   run: |
      #     unzip -o -u ledfx_frontend_android.zip
      #     cp -rf ./ledfx_frontend_android ./deps/ledfx/ledfx_frontend
      #     ls ./deps/ledfx/ledfx_frontend

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Build frontend
        run: |
          cd src3
          yarn
          yarn buildandroid
          cd ..

      - name: Include new build frontend
        run: |
          cp -r ./src3/build ./deps/ledfx/ledfx_frontend
          ls ./deps/ledfx/ledfx_frontend

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          architecture: x64
          python-version: 3.12

      - name: Setup Java 17 required by Gradle
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set JAVA_HOME
        run: |
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

      - name: Prepare virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          echo "Using Python==$(python --version)"

      - name: Install and upgrade dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            python3-pip \
            autoconf \
            automake \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake \
            libffi-dev \
            libssl-dev
          export PATH=$PATH:~/.local/bin/
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade git+https://github.com/kivy/buildozer

      - name: Build with Buildozer
        run: buildozer android debug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ./bin/*.apk

  release:
    # if: ${{ github.event.inputs.release == 'Yes' || github.event.inputs.release == 'yes' }}
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: package
          path: ./bin
      - name: List Files
        run: ls -la ./bin
      - name: copy filename of apk to env
        run: |
          apk_file=$(ls ./bin/*.apk)
          echo "APK_FILE=$apk_file" >> $GITHUB_ENV
          echo "APK_FILE=${{ env.APK_FILE }}"
      - name: Upload To Release
        uses: YeonV/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.inputs.upload_url }}
          asset_path: ${{ env.APK_FILE }}
          asset_name: LedFx_Android-2.0.${{ github.event.inputs.fversion }}.apk
          asset_content_type: application/vnd.android.package-archive